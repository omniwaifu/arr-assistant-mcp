{
  "dxt_version": "0.1",
  "name": "arr-assistant-mcp",
  "display_name": "Arr Assistant MCP Server",
  "version": "0.1.0",
  "description": "MCP server for adding movies and TV shows to Radarr/Sonarr via natural language queries",
  "long_description": "A streamlined MCP server that provides 6 tools for managing your Radarr and Sonarr instances. Search for movies and TV shows using natural language, add content with automatic root folder detection, and monitor server status - all without requiring external API keys.",
  "author": {
    "name": "Justin Malloy (brickfrog)",
    "email": "hi@justin.vc"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/omniwaifu/arr-assistant-mcp"
  },
  "homepage": "https://github.com/omniwaifu/arr-assistant-mcp",
  "support": "https://github.com/omniwaifu/arr-assistant-mcp/issues",
  "server": {
    "type": "python",
    "entry_point": "src/arr_assistant_mcp/main.py",
    "mcp_config": {
      "command": "uv",
      "args": [
        "run",
        "--with",
        "arr-assistant-mcp@${__dirname}",
        "python",
        "-m",
        "arr_assistant_mcp.main"
      ],
      "env": {
        "RADARR_URL": "${user_config.radarr_url}",
        "RADARR_API_KEY": "${user_config.radarr_api_key}",
        "SONARR_URL": "${user_config.sonarr_url}",
        "SONARR_API_KEY": "${user_config.sonarr_api_key}",
        "QUALITY_PROFILE_ID": "${user_config.quality_profile_id}",
        "RADARR_ROOT_FOLDER": "${user_config.radarr_root_folder}",
        "SONARR_ROOT_FOLDER": "${user_config.sonarr_root_folder}",
        "TVDB_API_KEY": "${user_config.tvdb_api_key}"
      }
    }
  },
  "tools": [
    {
      "name": "test_config",
      "description": "Test configuration and connectivity to Radarr/Sonarr servers"
    },
    {
      "name": "search_movies",
      "description": "Search for movies by title using Radarr's built-in lookup"
    },
    {
      "name": "add_movie_by_id",
      "description": "Add a specific movie to Radarr using its TMDb ID with optional root folder"
    },
    {
      "name": "search_and_add_show",
      "description": "Search for TV shows and optionally add to Sonarr using natural language"
    },
    {
      "name": "add_show_by_tvdb_id",
      "description": "Add a specific TV show to Sonarr using its TVDB ID with optional root folder"
    },
    {
      "name": "get_server_status",
      "description": "Check the status and connectivity of Radarr and Sonarr servers"
    }
  ],
  "keywords": ["radarr", "sonarr", "arr", "movies", "tv", "mcp", "media", "automation"],
  "license": "MIT",
  "compatibility": {
    "platforms": ["darwin", "win32", "linux"],
    "runtimes": {
      "python": ">=3.12"
    }
  },
  "user_config": {
    "radarr_url": {
      "type": "string",
      "title": "Radarr URL",
      "description": "URL to your Radarr instance (e.g., http://192.168.1.11:7878)",
      "required": true
    },
    "radarr_api_key": {
      "type": "string",
      "title": "Radarr API Key",
      "description": "API key for your Radarr instance (found in Settings > General)",
      "sensitive": true,
      "required": true
    },
    "sonarr_url": {
      "type": "string",
      "title": "Sonarr URL", 
      "description": "URL to your Sonarr instance (e.g., http://192.168.1.11:8989)",
      "required": true
    },
    "sonarr_api_key": {
      "type": "string",
      "title": "Sonarr API Key",
      "description": "API key for your Sonarr instance (found in Settings > General)",
      "sensitive": true,
      "required": true
    },
    "quality_profile_id": {
      "type": "number",
      "title": "Quality Profile ID",
      "description": "Default quality profile ID to use for new media",
      "default": 1,
      "min": 1,
      "required": false
    },
    "radarr_root_folder": {
      "type": "string",
      "title": "Radarr Root Folder (Optional)",
      "description": "Default root folder for movies (if not set, will auto-detect)",
      "required": false
    },
    "sonarr_root_folder": {
      "type": "string",
      "title": "Sonarr Root Folder (Optional)",
      "description": "Default root folder for TV shows (if not set, will auto-detect)",
      "required": false
    },
    "tvdb_api_key": {
      "type": "string",
      "title": "TVDB API Key (Optional)",
      "description": "API key for enhanced TV show search (optional)",
      "sensitive": true,
      "required": false
    }
  }
}